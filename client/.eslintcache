[{"/Users/katydonoghue/Desktop/garden-app/client/src/index.js":"1","/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js":"2","/Users/katydonoghue/Desktop/garden-app/client/src/App.js":"3","/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js":"4","/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js":"5","/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js":"6","/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js":"7","/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js":"8","/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js":"9","/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js":"10","/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js":"11","/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js":"12","/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js":"13","/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js":"14","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js":"15","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js":"16","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js":"17","/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js":"18","/Users/katydonoghue/Desktop/garden-app/client/src/components/PlantDetails.js":"19","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddGarden.js":"20","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddTasks.js":"21","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayTasks.js":"22","/Users/katydonoghue/Desktop/garden-app/client/src/components/EditTask.js":"23"},{"size":2860,"mtime":1607722911187,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607380517237,"results":"26","hashOfConfig":"25"},{"size":1363,"mtime":1607696291789,"results":"27","hashOfConfig":"25"},{"size":2519,"mtime":1607715972920,"results":"28","hashOfConfig":"25"},{"size":3181,"mtime":1607714625634,"results":"29","hashOfConfig":"25"},{"size":228,"mtime":1607707079557,"results":"30","hashOfConfig":"25"},{"size":184,"mtime":1607447440925,"results":"31","hashOfConfig":"25"},{"size":3950,"mtime":1607714866182,"results":"32","hashOfConfig":"25"},{"size":5325,"mtime":1607714373952,"results":"33","hashOfConfig":"25"},{"size":1026,"mtime":1607707079557,"results":"34","hashOfConfig":"25"},{"size":1517,"mtime":1607722759991,"results":"35","hashOfConfig":"25"},{"size":37,"mtime":1607463833758,"results":"36","hashOfConfig":"25"},{"size":249,"mtime":1607463833760,"results":"37","hashOfConfig":"25"},{"size":587,"mtime":1607463833756,"results":"38","hashOfConfig":"25"},{"size":3143,"mtime":1607722870222,"results":"39","hashOfConfig":"25"},{"size":5232,"mtime":1607711428186,"results":"40","hashOfConfig":"25"},{"size":314,"mtime":1607710396772,"results":"41","hashOfConfig":"25"},{"size":2845,"mtime":1607722585989,"results":"42","hashOfConfig":"25"},{"size":5152,"mtime":1607713892725,"results":"43","hashOfConfig":"25"},{"size":1821,"mtime":1607722695319,"results":"44","hashOfConfig":"25"},{"size":3236,"mtime":1607614241019,"results":"45","hashOfConfig":"25"},{"size":5129,"mtime":1607722995255,"results":"46","hashOfConfig":"25"},{"size":3339,"mtime":1607626020574,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mtuggw",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},"/Users/katydonoghue/Desktop/garden-app/client/src/index.js",["99"],"/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js",[],["100","101"],"/Users/katydonoghue/Desktop/garden-app/client/src/App.js",["102"],"\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport greenhouse from './components/images/greenhouse.png'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"appContainer\">\n        <div className=\"imageContainer\">\n          <img src={greenhouse} alt=\"greenhouse\" className=\"image\" />\n        </div>\n        <div className=\"textContainer\">\n          <h2>Headline here</h2>\n          <p>lots of copy here</p>\n          <p> and here</p>\n          <p>and here</p>\n          <div className='buttonContainer'>\n            <div className=\"buttonItem\">\n              <Button className=\"button\" variant=\"contained\" color=\"primary\" href=\"/register\"> Sign Up </Button>\n            </div>\n            <div className=\"buttonItem\">\n              <Button className=\"button\" variant=\"contained\" color=\"primary\" href=\"/login\"> LogIn </Button>\n            </div>\n            <div className=\"buttonItem\">\n              <Button className=\"button\" variant=\"contained\" color=\"primary\" href=\"/guides\"> Go to the Guides </Button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js",["103"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js",["104","105"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js",["106","107","108"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js",["109"],"import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nexport default function(ComposedComponent) {\n\n    class Authenticate extends Component {\n        constructor(props) {\n            super(props)\n\n            if (!this.props.isAuth) {\n                this.props.history.push('/login')\n            }\n        }\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }   \n\n    const mapStateToProps = (state) => {\n        return {\n            isAuth: state.isAuth\n        }\n    }\n\n    return connect(mapStateToProps)(Authenticate)\n}","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js",["110"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js",["111","112"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js",["113"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/PlantDetails.js",["114","115"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddGarden.js",["116","117"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddTasks.js",["118"],"import React, { useState } from \"react\";\n// import {connect} from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\nimport axios from \"axios\";\n\n\n//for material-ui select\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  }\n  }));\n\n\nfunction AddTasks(props) {\n    //for material ui select\n    const classes = useStyles();\n\n    const [task, setTask] = useState({})\n\n     \n    //update with information\n    const handleOnChange = (e) => {\n        setTask({...task,\n          [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSetDate = (date) => {\n        date.setDate(date.getDate())\n        console.log(date)\n        setTask({\n          ...task,\n            task_date: date\n        })\n      };\n\n    const onSaveTasks= (task) => {\n      axios.post('http://localhost:8080/tasks/add-task',\n        {\n          data: task\n        })\n        .then(response => {let success = response.data.success\n\n          if (success) {\n           \n           console.log(\"Success\") \n           setTask({\n               task_name: '',\n               task_description: ''      \n            })\n          } else {\n              console.log(\"did not update\")\n              }\n          })    \n    }\n\n    \n\n      return (\n        <div>\n            <p>Add Task</p>\n            <div>\n            <TextField onChange={handleOnChange} name=\"task_name\" value={task.task_name} id=\"standard-search\" label=\"Task\" type=\"text\" />\n            </div>\n            <div>                 \n            <TextField onChange={handleOnChange} name=\"task_description\" value={task.task_description} id=\"standard-textarea\" label=\"Description\" placeholder=\"Description\" multiline />\n            </div>\n            <div>                  \n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date\"\n                    format=\"MM/dd/yyyy\"\n                    name=\"task_date\"\n                    value={task.task_date}\n                    onChange={handleSetDate}\n                    KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                    }}\n                />\n                </Grid>\n            </MuiPickersUtilsProvider>\n            </div>\n              <div>\n                <button onClick={() => onSaveTasks(task)}>Save</button>\n              </div>          \n        </div>\n\n        \n    );\n} \n\n\nexport default AddTasks","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayTasks.js",["119"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/EditTask.js",["120","121"],"import { useEffect, useState } from \"react\"\nimport axios from 'axios'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\n\n\n//for material-ui select\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    }\n    }));\n  \n\nfunction EditTasks(props) {\n    //for material ui select\n    const classes = useStyles();\n\n    const [details, setDetails] = useState([])\n    let id = props.match.params.id\n\n\n    useEffect(() => {\n        // let id = props.match.params.id\n        fetchTaskDetails(id)\n    }, [])\n\n\n       //update with information\n       const handleOnChange = (e) => {\n        setDetails({...details,\n          [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSetDate = (date) => {\n        date.setDate(date.getDate())\n        console.log(date)\n        setDetails({\n          ...details,\n            task_date: date\n        })\n      };\n\n      //update db - need id #\n      const onSaveTasks= (task) => {\n\n        axios.post(`http://localhost:8080/tasks/update-task/${id}`,\n          {\n            data: task\n          })\n          .then(response => {let success = response.data.success\n  \n            if (success) {\n             props.history.push('/tasks')\n            } else {\n                console.log(\"did not update\")\n                }\n            })    \n      }\n\n\n    // get task details\n    const fetchTaskDetails = (id) => {\n        axios.get(`http://localhost:8080/tasks/edit-task/${id}`)\n        .then(response => {\n          setDetails(response.data[0])\n        })\n    }\n\n    console.log(details)\n\n    return(\n        <div>\n           <p>Edit</p>\n           <div>\n            <TextField onChange={handleOnChange} name=\"task_name\" value={details.task_name} id=\"standard-search\" label=\"\" type=\"text\" />\n            </div>\n            <div>                 \n            <TextField onChange={handleOnChange} name=\"task_description\" value={details.task_description} id=\"standard-textarea\" label=\"\" placeholder=\"Description\" multiline />\n            </div>\n            <div>                  \n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date\"\n                    format=\"MM/dd/yyyy\"\n                    name=\"task_date\"\n                    value={details.task_date}\n                    onChange={handleSetDate}\n                    KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                    }}\n                />\n                </Grid>\n            </MuiPickersUtilsProvider>\n            </div>\n              <div>\n                <button onClick={() => onSaveTasks(details)}>Save</button>\n              </div>    \n            \n        </div>\n    )\n}\n\nexport default EditTasks",{"ruleId":"122","severity":1,"message":"123","line":20,"column":8,"nodeType":"124","messageId":"125","endLine":20,"endColumn":19},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"122","severity":1,"message":"130","line":16,"column":9,"nodeType":"124","messageId":"125","endLine":16,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":38,"column":32,"nodeType":"133","messageId":"134","endLine":38,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":38,"column":28,"nodeType":"133","messageId":"134","endLine":38,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":38,"column":52,"nodeType":"133","messageId":"134","endLine":38,"endColumn":54},{"ruleId":"131","severity":1,"message":"132","line":49,"column":31,"nodeType":"133","messageId":"134","endLine":49,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":49,"column":58,"nodeType":"133","messageId":"134","endLine":49,"endColumn":60},{"ruleId":"131","severity":1,"message":"132","line":49,"column":81,"nodeType":"133","messageId":"134","endLine":49,"endColumn":83},{"ruleId":"135","severity":1,"message":"136","line":4,"column":1,"nodeType":"137","endLine":26,"endColumn":2},{"ruleId":"122","severity":1,"message":"138","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":44,"column":8,"nodeType":"141","endLine":44,"endColumn":10,"suggestions":"142"},{"ruleId":"131","severity":1,"message":"132","line":55,"column":31,"nodeType":"133","messageId":"134","endLine":55,"endColumn":33},{"ruleId":"139","severity":1,"message":"143","line":38,"column":8,"nodeType":"141","endLine":38,"endColumn":29,"suggestions":"144"},{"ruleId":"122","severity":1,"message":"130","line":31,"column":9,"nodeType":"124","messageId":"125","endLine":31,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":39,"column":6,"nodeType":"141","endLine":39,"endColumn":8,"suggestions":"146"},{"ruleId":"122","severity":1,"message":"130","line":25,"column":9,"nodeType":"124","messageId":"125","endLine":25,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":30,"column":26,"nodeType":"133","messageId":"134","endLine":30,"endColumn":28},{"ruleId":"122","severity":1,"message":"130","line":36,"column":11,"nodeType":"124","messageId":"125","endLine":36,"endColumn":18},{"ruleId":"139","severity":1,"message":"147","line":41,"column":8,"nodeType":"141","endLine":41,"endColumn":10,"suggestions":"148"},{"ruleId":"122","severity":1,"message":"130","line":32,"column":11,"nodeType":"124","messageId":"125","endLine":32,"endColumn":18},{"ruleId":"139","severity":1,"message":"149","line":41,"column":8,"nodeType":"141","endLine":41,"endColumn":10,"suggestions":"150"},"no-unused-vars","'requireAuth' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newPlant', 'props.displayGardenID', and 'props.displayZone'. Either include them or remove the dependency array. You can also do a functional update 'setNewPlant(n => ...)' if you only need 'newPlant' in the 'setNewPlant' call.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'displayGardenOptions'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'fetchTasks'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [newPlant, props.displayGardenID, props.displayZone]",{"range":"168","text":"169"},"Update the dependencies array to be: [displayGardenOptions, props.updateGardens]",{"range":"170","text":"171"},"Update the dependencies array to be: [props.match.params.id]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchTasks]",{"range":"174","text":"175"},"Update the dependencies array to be: [id]",{"range":"176","text":"177"},[1120,1122],"[newPlant, props.displayGardenID, props.displayZone]",[928,949],"[displayGardenOptions, props.updateGardens]",[910,912],"[props.match.params.id]",[1170,1172],"[fetchTasks]",[984,986],"[id]"]