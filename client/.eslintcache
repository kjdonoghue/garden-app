[{"/Users/katydonoghue/Desktop/garden-app/client/src/index.js":"1","/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js":"2","/Users/katydonoghue/Desktop/garden-app/client/src/App.js":"3","/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js":"4","/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js":"5","/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js":"6","/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js":"7","/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js":"8","/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js":"9","/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js":"10","/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js":"11","/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js":"12","/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js":"13","/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js":"14","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js":"15","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js":"16","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js":"17","/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js":"18"},{"size":2672,"mtime":1607521647473,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1607380517237,"results":"21","hashOfConfig":"20"},{"size":134,"mtime":1607447440925,"results":"22","hashOfConfig":"20"},{"size":940,"mtime":1607468650715,"results":"23","hashOfConfig":"20"},{"size":2771,"mtime":1607520440266,"results":"24","hashOfConfig":"20"},{"size":112,"mtime":1607447440928,"results":"25","hashOfConfig":"20"},{"size":184,"mtime":1607447440925,"results":"26","hashOfConfig":"20"},{"size":114,"mtime":1607447440926,"results":"27","hashOfConfig":"20"},{"size":3574,"mtime":1607463833756,"results":"28","hashOfConfig":"20"},{"size":946,"mtime":1607463833755,"results":"29","hashOfConfig":"20"},{"size":319,"mtime":1607524159789,"results":"30","hashOfConfig":"20"},{"size":37,"mtime":1607463833758,"results":"31","hashOfConfig":"20"},{"size":249,"mtime":1607463833760,"results":"32","hashOfConfig":"20"},{"size":587,"mtime":1607463833756,"results":"33","hashOfConfig":"20"},{"size":1738,"mtime":1607519041512,"results":"34","hashOfConfig":"20"},{"size":5109,"mtime":1607469609312,"results":"35","hashOfConfig":"20"},{"size":325,"mtime":1607521757104,"results":"36","hashOfConfig":"20"},{"size":1162,"mtime":1607524227403,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mtuggw",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/katydonoghue/Desktop/garden-app/client/src/index.js",["78"],"/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js",[],["79","80"],"/Users/katydonoghue/Desktop/garden-app/client/src/App.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js",["81"],"import React, {useState} from \"react\"\nimport {connect} from \"react-redux\"\n\nfunction FindZone(props) {\n\n   const [zip, setZip] = useState()\n   const [zone, setZone] = useState([])\n\n    const handleOnChange = (e) => {\n        return (\n            setZip({\n                zip: e.target.value\n            })\n        )\n    } \n\n    const handleOnClick = (zip) => {\n        fetch(`https://phzmapi.org/${zip}.json`)\n        .then(response => response.json())\n        .then(result => {\n            setZone(result.zone)\n        })\n      }\n\n      console.log(zone)\n    \n  return (\n    <div className=\"ZoneContainer\">\n      <div>\n      <h1>Find Your Growing Zone</h1>\n      <input type=\"text\" placeholder=\"Enter Zip Code\" name=\"zone\" onChange={handleOnChange} />\n      <button onClick={() => handleOnClick(zip.zip)}>Submit</button>\n      </div>\n      <div>\n          <p>Your Zone is: {zone} </p>\n      </div>\n    </div>\n  );\n}\n\nexport default FindZone","/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js",["82"],"/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js",["83"],"import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nexport default function(ComposedComponent) {\n\n    class Authenticate extends Component {\n        constructor(props) {\n            super(props)\n\n            if (!this.props.isAuth) {\n                this.props.history.push('/login')\n            }\n        }\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }   \n\n    const mapStateToProps = (state) => {\n        return {\n            isAuth: state.isAuth\n        }\n    }\n\n    return connect(mapStateToProps)(Authenticate)\n}","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js",["84"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js",["85","86","87","88","89"],"import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\n\n\n//for material-ui select\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  }\n  }));\n\n\nfunction AddPlant() {\n   //for material ui select\n   const classes = useStyles();\n\n  const [plantName, setPlantName] = useState()\n  const [plantFamily, setPlantFamily] = useState()\n  const [sowDate, setSowDate] = useState(new Date('2021-04-07'));\n  //put lastfrost date in here\n\n  //calc sow date by veg family or send last frost through and calc on server\n  const handleDateChange = (date) => {\n    date.setDate(date.getDate() + 50)\n    console.log(date)\n    setSowDate(date);\n  };\n\n  const handleSelectFamily = (event) => {        \n    setPlantFamily(event.target.value)\n  };\n\n  const handlePlantName = (e) => {\n    setPlantName(e.target.value)\n  }\n\n  const onSaveToGarden = (id, name, family, sow_date) =>{\n    console.log(id)\n    console.log(name)\n    console.log(family)\n    console.log(sow_date)\n    fetch(\"url\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        garden_id: id,\n        name: name,\n        family: family,\n        sow_date: sow_date\n\n      })\n  })\n  }\n\n\n    return (\n      <div>\n          <p>Add Plant</p>\n          <div>\n          <TextField onChange={handlePlantName} id=\"standard-search\" label=\"Plant Name\" type=\"text\" />\n          </div>\n          <div>\n          <FormControl className={classes.formControl}>            \n                <InputLabel id=\"demo-simple-select-label\">Family</InputLabel>\n                <Select onChange={handleSelectFamily} labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" value={plantFamily} >\n                    <MenuItem value={1}>Beans</MenuItem>\n                    <MenuItem value={2}>Beets</MenuItem>\n                    <MenuItem value={3}>Broccoli</MenuItem>\n                    <MenuItem value={4}>Cabbage</MenuItem>\n                    <MenuItem value={5}>Carrots</MenuItem>\n                    <MenuItem value={6}>Cauliflower</MenuItem>\n                    <MenuItem value={7}>Celery</MenuItem>\n                    <MenuItem value={8}>Corn</MenuItem>\n                    <MenuItem value={9}>Cowpeas</MenuItem>\n                    <MenuItem value={10}>Cucumbers</MenuItem>\n                    <MenuItem value={11}>Eggplant</MenuItem>\n                    <MenuItem value={13}>Greens</MenuItem>\n                    <MenuItem value={14}>Leeks</MenuItem>\n                    <MenuItem value={15}>Melons</MenuItem>\n                    <MenuItem value={16}>Okra</MenuItem>\n                    <MenuItem value={19}>Peanuts</MenuItem>\n                    <MenuItem value={20}>Peas</MenuItem>\n                    <MenuItem value={21}>Peppers</MenuItem>\n                    <MenuItem value={22}>Potatoes</MenuItem>\n                    <MenuItem value={24}>Summer Squash</MenuItem>\n                    <MenuItem value={25}>Winter Squash</MenuItem>\n                    <MenuItem value={26}>Sweet Potatoes</MenuItem>\n                    <MenuItem value={28}>Tomatoes</MenuItem>        \n                </Select>\n            </FormControl>\n            </div>\n            <div>\n              <button onClick={() => onSaveToGarden(1, plantName, plantFamily, sowDate)}>Save</button>\n            </div>\n            {/* <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  label=\"Sow Seeds\"\n                  format=\"MM/dd/yyyy\"\n                  value={sowDate}\n                  onChange={handleDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />                    \n              </Grid>\n            </MuiPickersUtilsProvider>\n            </div> */}\n          {/* input a plant name\n          select the plant family\n          get the information from the plant family\n          get last frost date from zone\n          post to the server\n            garden # - props\n            plant variety name - user input\n            plant family - select from drop down\n            last frost date - from zone - global state\n            sow_days - from plant family - maybe hardcode? */}\n\n\n      </div>\n\n      \n    );\n} \n\nexport default AddPlant","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js",["90","91"],{"ruleId":"92","severity":1,"message":"93","line":18,"column":8,"nodeType":"94","messageId":"95","endLine":18,"endColumn":19},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":2,"column":9,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":10,"column":21,"nodeType":"103","messageId":"104","endLine":10,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":4,"column":1,"nodeType":"107","endLine":26,"endColumn":2},{"ruleId":"108","severity":1,"message":"109","line":27,"column":8,"nodeType":"110","endLine":27,"endColumn":10,"suggestions":"111"},{"ruleId":"92","severity":1,"message":"112","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":12},{"ruleId":"92","severity":1,"message":"113","line":10,"column":8,"nodeType":"94","messageId":"95","endLine":10,"endColumn":20},{"ruleId":"92","severity":1,"message":"114","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":33},{"ruleId":"92","severity":1,"message":"115","line":11,"column":35,"nodeType":"94","messageId":"95","endLine":11,"endColumn":53},{"ruleId":"92","severity":1,"message":"116","line":42,"column":9,"nodeType":"94","messageId":"95","endLine":42,"endColumn":25},{"ruleId":"92","severity":1,"message":"117","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"118","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":29},"no-unused-vars","'requireAuth' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'connect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'Grid' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'handleDateChange' is assigned a value but never used.","'garden' is assigned a value but never used.","'setGarden' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [id]",{"range":"124","text":"125"},[1019,1021],"[id]"]