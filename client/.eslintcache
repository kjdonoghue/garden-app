[{"/Users/katydonoghue/Desktop/garden-app/client/src/index.js":"1","/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js":"2","/Users/katydonoghue/Desktop/garden-app/client/src/App.js":"3","/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js":"4","/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js":"5","/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js":"6","/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js":"7","/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js":"8","/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js":"9","/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js":"10","/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js":"11","/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js":"12","/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js":"13","/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js":"14","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js":"15","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js":"16","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js":"17","/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js":"18","/Users/katydonoghue/Desktop/garden-app/client/src/components/PlantDetails.js":"19","/Users/katydonoghue/Desktop/garden-app/client/src/components/AddGarden.js":"20"},{"size":2904,"mtime":1607551558605,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607380517237,"results":"23","hashOfConfig":"22"},{"size":134,"mtime":1607447440925,"results":"24","hashOfConfig":"22"},{"size":940,"mtime":1607468650715,"results":"25","hashOfConfig":"22"},{"size":2771,"mtime":1607520440266,"results":"26","hashOfConfig":"22"},{"size":112,"mtime":1607447440928,"results":"27","hashOfConfig":"22"},{"size":184,"mtime":1607447440925,"results":"28","hashOfConfig":"22"},{"size":114,"mtime":1607447440926,"results":"29","hashOfConfig":"22"},{"size":3574,"mtime":1607463833756,"results":"30","hashOfConfig":"22"},{"size":946,"mtime":1607463833755,"results":"31","hashOfConfig":"22"},{"size":556,"mtime":1607527159849,"results":"32","hashOfConfig":"22"},{"size":37,"mtime":1607463833758,"results":"33","hashOfConfig":"22"},{"size":249,"mtime":1607463833760,"results":"34","hashOfConfig":"22"},{"size":587,"mtime":1607463833756,"results":"35","hashOfConfig":"22"},{"size":2064,"mtime":1607531112067,"results":"36","hashOfConfig":"22"},{"size":5042,"mtime":1607550982531,"results":"37","hashOfConfig":"22"},{"size":325,"mtime":1607521757104,"results":"38","hashOfConfig":"22"},{"size":3257,"mtime":1607551626643,"results":"39","hashOfConfig":"22"},{"size":5191,"mtime":1607554351432,"results":"40","hashOfConfig":"22"},{"size":344,"mtime":1607551917346,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mtuggw",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katydonoghue/Desktop/garden-app/client/src/index.js",["87"],"/Users/katydonoghue/Desktop/garden-app/client/src/reportWebVitals.js",[],["88","89"],"/Users/katydonoghue/Desktop/garden-app/client/src/App.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Zone.js",["90"],"import React, {useState} from \"react\"\nimport {connect} from \"react-redux\"\n\nfunction FindZone(props) {\n\n   const [zip, setZip] = useState()\n   const [zone, setZone] = useState([])\n\n    const handleOnChange = (e) => {\n        return (\n            setZip({\n                zip: e.target.value\n            })\n        )\n    } \n\n    const handleOnClick = (zip) => {\n        fetch(`https://phzmapi.org/${zip}.json`)\n        .then(response => response.json())\n        .then(result => {\n            setZone(result.zone)\n        })\n      }\n\n      console.log(zone)\n    \n  return (\n    <div className=\"ZoneContainer\">\n      <div>\n      <h1>Find Your Growing Zone</h1>\n      <input type=\"text\" placeholder=\"Enter Zip Code\" name=\"zone\" onChange={handleOnChange} />\n      <button onClick={() => handleOnClick(zip.zip)}>Submit</button>\n      </div>\n      <div>\n          <p>Your Zone is: {zone} </p>\n      </div>\n    </div>\n  );\n}\n\nexport default FindZone","/Users/katydonoghue/Desktop/garden-app/client/src/components/Login.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Tasks.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/BaseLayout.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Guides.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Register.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/Menu.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/store/reducer.js",["91","92","93"],"const initialState = {\n    zone: '',\n    primary_garden: '',\n    isGuest: false,\n    isAuth: false\n}\n\nconst reducer = (state= initialState, action) => {\n\n    if (action.type == 'LOGGED_IN') {\n        return {...state,\n            isAuth: true\n        }\n    } else if (action.type == 'SET_GARDEN') {\n        return{...state,\n            primary_garden: action.payload\n        }\n    }  else if (action.type == 'SET_ZONE') {\n        return{...state,\n            zone: action.payload\n        }\n    } else {\n        return state\n    }\n}\n\n\nexport default reducer","/Users/katydonoghue/Desktop/garden-app/client/src/store/actions/actionTypes.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/utils/authHeaders.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/requireAuth.js",["94"],"import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nexport default function(ComposedComponent) {\n\n    class Authenticate extends Component {\n        constructor(props) {\n            super(props)\n\n            if (!this.props.isAuth) {\n                this.props.history.push('/login')\n            }\n        }\n        render() {\n            return <ComposedComponent {...this.props} />\n        }\n    }   \n\n    const mapStateToProps = (state) => {\n        return {\n            isAuth: state.isAuth\n        }\n    }\n\n    return connect(mapStateToProps)(Authenticate)\n}","/Users/katydonoghue/Desktop/garden-app/client/src/components/GardenTable.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddPlant.js",["95","96","97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport {connect} from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\nimport axios from \"axios\";\n\n\n//for material-ui select\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  }\n  }));\n\n\nfunction AddPlant(props) {\n    //for material ui select\n    const classes = useStyles();\n\n    const [newPlant, setNewPlant] = useState({})\n    \n    useEffect(() => {\n      setNewPlant({...newPlant,\n        zone: props.displayZone,\n        garden_id: props.displayGardenID\n      })\n    }, [props.displayGardenID])        \n    \n    \n    const handleOnChange = (e) => {\n        setNewPlant({...newPlant,\n          [e.target.name]: e.target.value\n        })\n    }\n\n    const onSaveToGarden = (plant) => {\n      axios.post('http://localhost:8080/garden/save-new',\n        {\n          data: newPlant\n        })\n        .then(response => {let success = response.data.success\n\n          if (success) {\n           //reload add plant and garden\n           console.log(\"Success\")\n          } else {\n              console.log(\"did not update\")\n              }\n          })    \n    }\n\n    \n\n      return (\n        <div>\n            <p>Add Plant</p>\n            <div>\n            <TextField onChange={handleOnChange} name=\"plant_name\" value={newPlant.plant_name} id=\"standard-search\" label=\"Plant Name\" type=\"text\" />\n            </div>\n            <div>\n            <FormControl className={classes.formControl}>            \n                  <InputLabel id=\"demo-simple-select-label\">Family</InputLabel>\n                  <Select onChange={handleOnChange} labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" name=\"plant_family\" value={newPlant.plant_family} >\n                      <MenuItem value={1}>Beans</MenuItem>\n                      <MenuItem value={2}>Beets</MenuItem>\n                      <MenuItem value={3}>Broccoli</MenuItem>\n                      <MenuItem value={4}>Cabbage</MenuItem>\n                      <MenuItem value={5}>Carrots</MenuItem>\n                      <MenuItem value={6}>Cauliflower</MenuItem>\n                      <MenuItem value={7}>Celery</MenuItem>\n                      <MenuItem value={8}>Corn</MenuItem>\n                      <MenuItem value={9}>Cowpeas</MenuItem>\n                      <MenuItem value={10}>Cucumbers</MenuItem>\n                      <MenuItem value={11}>Eggplant</MenuItem>\n                      <MenuItem value={13}>Greens</MenuItem>\n                      <MenuItem value={14}>Leeks</MenuItem>\n                      <MenuItem value={15}>Melons</MenuItem>\n                      <MenuItem value={16}>Okra</MenuItem>\n                      <MenuItem value={19}>Peanuts</MenuItem>\n                      <MenuItem value={20}>Peas</MenuItem>\n                      <MenuItem value={21}>Peppers</MenuItem>\n                      <MenuItem value={22}>Potatoes</MenuItem>\n                      <MenuItem value={24}>Summer Squash</MenuItem>\n                      <MenuItem value={25}>Winter Squash</MenuItem>\n                      <MenuItem value={26}>Sweet Potatoes</MenuItem>\n                      <MenuItem value={28}>Tomatoes</MenuItem>        \n                  </Select>\n              </FormControl>                        \n              <TextField onChange={handleOnChange} name=\"company\" id=\"standard-search\" label=\"Company\" type=\"text\" value={newPlant.company} />\n              <FormControl className={classes.formControl}>            \n                  <InputLabel id=\"demo-simple-select-label\">Start From</InputLabel>\n                  <Select onChange={handleOnChange} labelId=\"demo-simple-select-label\" id=\"demo-simple-select\" name=\"type\" value={newPlant.type} >\n                      <MenuItem value=\"seed\">Seed</MenuItem>\n                      <MenuItem value=\"plant\">Plant</MenuItem>\n                      <MenuItem value=\"sets\">Sets</MenuItem>\n                      <MenuItem value=\"slips\">Slips</MenuItem>                   \n                  </Select>\n              </FormControl>\n              </div>\n              <div>\n                <button onClick={() => onSaveToGarden(newPlant)}>Save</button>\n              </div>          \n        </div>\n\n        \n    );\n} \n\nconst mapStatesToProps = (state) =>  {\n  return {\n    displayZone: state.zone,\n    displayGardenID: state.primary_garden   \n  }\n}\n\nexport default connect(mapStatesToProps)(AddPlant)","/Users/katydonoghue/Desktop/garden-app/client/src/components/DisplayGarden.js",[],"/Users/katydonoghue/Desktop/garden-app/client/src/components/ChooseGarden.js",["100","101"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/PlantDetails.js",["102","103"],"/Users/katydonoghue/Desktop/garden-app/client/src/components/AddGarden.js",[],{"ruleId":"104","severity":1,"message":"105","line":20,"column":8,"nodeType":"106","messageId":"107","endLine":20,"endColumn":19},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"112","line":2,"column":9,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":10,"column":21,"nodeType":"115","messageId":"116","endLine":10,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":14,"column":28,"nodeType":"115","messageId":"116","endLine":14,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":18,"column":29,"nodeType":"115","messageId":"116","endLine":18,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":4,"column":1,"nodeType":"119","endLine":26,"endColumn":2},{"ruleId":"104","severity":1,"message":"120","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":12},{"ruleId":"104","severity":1,"message":"121","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":20},{"ruleId":"104","severity":1,"message":"122","line":12,"column":10,"nodeType":"106","messageId":"107","endLine":12,"endColumn":33},{"ruleId":"104","severity":1,"message":"123","line":12,"column":35,"nodeType":"106","messageId":"107","endLine":12,"endColumn":53},{"ruleId":"124","severity":1,"message":"125","line":45,"column":8,"nodeType":"126","endLine":45,"endColumn":31,"suggestions":"127"},{"ruleId":"104","severity":1,"message":"128","line":35,"column":28,"nodeType":"106","messageId":"107","endLine":35,"endColumn":45},{"ruleId":"124","severity":1,"message":"129","line":43,"column":8,"nodeType":"126","endLine":43,"endColumn":10,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"131","line":31,"column":9,"nodeType":"106","messageId":"107","endLine":31,"endColumn":16},{"ruleId":"124","severity":1,"message":"132","line":39,"column":6,"nodeType":"126","endLine":39,"endColumn":8,"suggestions":"133"},"no-unused-vars","'requireAuth' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'connect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Grid' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newPlant' and 'props.displayZone'. Either include them or remove the dependency array. You can also do a functional update 'setNewPlant(n => ...)' if you only need 'newPlant' in the 'setNewPlant' call.","ArrayExpression",["136"],"'setSelectedGarden' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserGardenDefaults'. Either include it or remove the dependency array.",["137"],"'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [newPlant, props.displayGardenID, props.displayZone]",{"range":"145","text":"146"},"Update the dependencies array to be: [fetchUserGardenDefaults]",{"range":"147","text":"148"},"Update the dependencies array to be: [props.match.params.id]",{"range":"149","text":"150"},[1221,1244],"[newPlant, props.displayGardenID, props.displayZone]",[1102,1104],"[fetchUserGardenDefaults]",[910,912],"[props.match.params.id]"]